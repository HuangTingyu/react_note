[{"D:\\00Dinary\\react_note\\my-app\\src\\index.js":"1","D:\\00Dinary\\react_note\\my-app\\src\\reportWebVitals.js":"2","D:\\00Dinary\\react_note\\my-app\\src\\TodoList.js":"3","D:\\00Dinary\\react_note\\my-app\\src\\TodoItem.js":"4","D:\\00Dinary\\react_note\\my-app\\src\\testProps.js":"5","D:\\00Dinary\\react_note\\my-app\\src\\App.js":"6"},{"size":515,"mtime":1607672765739,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1606895577632,"results":"9","hashOfConfig":"8"},{"size":2858,"mtime":1607334402594,"results":"10","hashOfConfig":"8"},{"size":1151,"mtime":1607333999020,"results":"11","hashOfConfig":"8"},{"size":178,"mtime":1607074661916,"results":"12","hashOfConfig":"8"},{"size":662,"mtime":1607674257297,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"wufu1b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\00Dinary\\react_note\\my-app\\src\\index.js",[],["29","30"],"D:\\00Dinary\\react_note\\my-app\\src\\reportWebVitals.js",[],"D:\\00Dinary\\react_note\\my-app\\src\\TodoList.js",["31"],"import React from 'react'\nimport TodoItem from './TodoItem'\nimport axios from 'axios'\n// import TestProps from './testProps'\n\nclass TodoList extends React.Component{\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: [],\n      inputValue:\"\"\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleBtnClick = this.handleBtnClick.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.handleTodoItems = this.handleTodoItems.bind(this)\n  }\n\n  render() {\n    console.log('render')\n    return (<div>\n      <section>\n        <input value={this.state.inputValue}\n          onChange={this.handleInputChange}\n          ref={(input)=>{this.input = input}}\n        ></input>\n        <button onClick={this.handleBtnClick}>add</button>\n      </section>\n      <ul ref={(ul)=>{this.ul = ul}}>\n        {\n          this.handleTodoItems()\n        }\n      </ul>\n      {/* <TestProps content={ this.state.inputValue}></TestProps> */}\n\n    </div>)\n  }\n  // 组件被挂载到页面后自动执行\n  // componentWillMount() {\n  //   console.log('Component WILL MOUNT!')\n  // }\n  // // 组件被挂在后执行\n  componentDidMount() {\n        //ajax请求通通写在这里\n    console.log('Component DID MOUNT!')\n    // axios.get('/api/todolist')\n    //   .then((res) => {\n    //     this.setState(() => {\n    //       return {\n    //         list: [...res.data]\n    //       }\n    //     })\n    //   }).catch(() => {\n    //   console.log(\"error\")\n    // })\n  }\n  // shouldComponentUpdate(newProps, newState) {\n  //   console.log(\"shouldComponentUpdate\")\n  //   return true;\n  // }\n  // componentWillUpdate() {\n  //   console.log(\"componentWillUpdate\")\n  // }\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate')\n  // }\n  handleTodoItems() {\n    return this.state.list.map((item, index) => {\n      return (\n        <TodoItem delete={this.handleDelete}\n          key={index}\n          content={item}\n          index={index}\n        ></TodoItem>\n      )\n      // return <li key={index} onClick={this.handleItemClick.bind(this,index)}>{item}</li>\n    })\n  }\n  handleBtnClick() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue],\n      inputValue:\"\"\n    }, () => {\n      console.log(this.ul.querySelectorAll('div'))\n    })\n    \n  }\n  handleInputChange(e) {\n    // let value = e.target.value \n    let value = this.input.value\n    this.setState({\n      inputValue: value\n    })\n  }\n  handleDelete(index) {\n    // 建议不要直接操作 this.state.list\n    let list = [...this.state.list]\n    list.splice(index, 1)\n    this.setState({\n      list:list\n    })\n  }\n  handleItemClick(index) {\n    // 建议不要直接操作 this.state.list\n    let list = [...this.state.list]\n    list.splice(index, 1)\n    this.setState({\n      list:list\n    })\n  }\n}\n\nexport default TodoList;\n",["32","33"],"D:\\00Dinary\\react_note\\my-app\\src\\TodoItem.js",[],"D:\\00Dinary\\react_note\\my-app\\src\\testProps.js",[],"D:\\00Dinary\\react_note\\my-app\\src\\App.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":13},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]